services:
  postgres-user-testing-unigate:
    container_name: postgres-user-testing-unigate
    image: postgres:17-bookworm
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - UNIGATE_DB=${UNIGATE_DB?Variable not set}
      - AUTH_DB=${AUTH_DB?Variable not set}
    volumes:
      - ./postgres/create-databases.sh:/docker-entrypoint-initdb.d/create-databases.sh
      - pgdata:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  backend-user-testing-unigate:
    container_name: backend-user-testing-unigate
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=postgres-user-testing-unigate
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
      - UNIGATE_DB=${UNIGATE_DB?Variable not set}
      - AUTH_DB=${AUTH_DB?Variable not set}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY?Variable not set}
      - JWT_SECRET=${JWT_SECRET?Variable not set}
      - MODE=prod
    volumes:
      - /var/run/unigate/fifo:/fifo
    labels:
      - traefik.enable=true
      - traefik.http.routers.unigate-backend.entrypoints=websecure
      - traefik.http.routers.unigate-backend.rule=Host(`api-user-testing.unigate.tech`)
      - traefik.http.routers.unigate-backend.tls.certresolver=dns-cloudflare
      - traefik.http.services.unigate-backend.loadbalancer.server.port=8000
    depends_on:
      postgres-user-testing-unigate:
        condition: service_healthy
        restart: true
        required: true
    restart: unless-stopped

  frontend-user-testing-unigate:
    container_name: frontend-user-testing-unigate
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NUXT_PUBLIC_BASE_URL=${NUXT_PUBLIC_BASE_URL?Variable not set}
    labels:
      - traefik.enable=true
      - traefik.http.routers.unigate-frontend.entrypoints=websecure
      - traefik.http.routers.unigate-frontend.rule=Host(`user-testing.unigate.tech`)
      - traefik.http.routers.unigate-frontend.tls.certresolver=dns-cloudflare
      - traefik.http.services.unigate-frontend.loadbalancer.server.port=3000
    restart: unless-stopped

networks:
  default:
    name: infrastructure
    external: true

volumes:
  pgdata: